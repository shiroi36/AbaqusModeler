from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Part(name='sp400_M22-4', objectToCopy=
    mdb.models['Model-1'].parts['sp400_M22'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['sp400_M22-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[12], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[13]))
mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['sp400_M22-4'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['sp400_M22-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], ), vector=(0.0, 
    5.0))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], ), vector=(0.0, 
    15.0))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], ), vector=(0.0, 
    -5.0))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], ), vector=(0.0, 
    -15.0))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7]), vector=(0.0, 
    30.0))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9]), vector=(0.0, 
    -30.0))
mdb.models['Model-1'].sketches['__edit__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], ), vector=(0.0, 
    60.0))
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(0.0, -160.0), 
    point2=(120.0, 160.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[18], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[19], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[20], ))
mdb.models['Model-1'].sketches['__edit__'].rectangle(point1=(0.0, -160.0), 
    point2=(100.0, 160.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], ))
mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['sp400_M22-4'].regenerate()
#* FeatureError:çƒç\ízÇÕé∏îsÇµÇ‹ÇµÇΩ
mdb.models['Model-1'].parts['sp400_M22-4'].deleteFeatures(('Partition face-1', 
    'Partition cell-1', 'Partition cell-2', 'Partition cell-3', 
    'Partition cell-4', 'Partition cell-5', 'Partition cell-6', 
    'Partition cell-7', 'Partition cell-8', 'Partition cell-9'))
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=16.78, name='__profile__', 
    sheetSize=671.28, transform=
    mdb.models['Model-1'].parts['sp400_M22-4'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['sp400_M22-4'].faces[9], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['sp400_M22-4'].edges[7], 
    sketchOrientation=RIGHT, origin=(49.239376, 0.0, 16.0)))
mdb.models['Model-1'].parts['sp400_M22-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['sh00'])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['sh01'])
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], ), vector=(
    -49.239376, -67.5))
mdb.models['Model-1'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], ), vector=(
    -49.239376, -67.5))
mdb.models['Model-1'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], ), vector=(
    -49.239376, -127.5))
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[31], ), vector=(
    -49.239376, -187.5))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[19], ), vector=(
    -49.239376, -112.5))
mdb.models['Model-1'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[23], ), vector=(
    -49.239376, -22.5))
mdb.models['Model-1'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[23], ), vector=(
    -49.239376, -82.5))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[19], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[21], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[23], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[25], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[27]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[18], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[20], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[22], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[24], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[26]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], ))
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionFaceBySketch(faces=
    mdb.models['Model-1'].parts['sp400_M22-4'].faces.getSequenceFromMask((
    '[#200 ]', ), ), sketch=mdb.models['Model-1'].sketches['__profile__'], 
    sketchUpEdge=mdb.models['Model-1'].parts['sp400_M22-4'].edges[7])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByPlanePointNormal(
    cells=mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), normal=mdb.models['Model-1'].parts['sp400_M22-4'].edges[23]
    , point=mdb.models['Model-1'].parts['sp400_M22-4'].vertices[10])
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#2 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[20], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[33], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#4 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[20], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[34], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#8 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[28], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[35], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#10 ]', ), ), edges=(
    mdb.models['Model-1'].parts['sp400_M22-4'].edges[12], ), line=
    mdb.models['Model-1'].parts['sp400_M22-4'].edges[36], sense=REVERSE)
#* ÉtÉBÅ[É`ÉÉÇÃçÏê¨ÇÕé∏îsÇµÇ‹ÇµÇΩ.
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#10 ]', ), ), edges=(
    mdb.models['Model-1'].parts['sp400_M22-4'].edges[28], ), line=
    mdb.models['Model-1'].parts['sp400_M22-4'].edges[36], sense=REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#1 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[28], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[37], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].sectionAssignments[0].setValues(
    region=Region(
    cells=mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask(
    mask=('[#7f ]', ), )))
mdb.models['Model-1'].parts['sp400_M22-4'].Surface(name='b1', side1Faces=
    mdb.models['Model-1'].parts['sp400_M22-4'].faces.getSequenceFromMask((
    '[#1f000000 ]', ), ))
mdb.models['Model-1'].parts['sp400_M22-4'].Surface(name='e', side1Faces=
    mdb.models['Model-1'].parts['sp400_M22-4'].faces.getSequenceFromMask((
    '[#100000 ]', ), ))
mdb.models['Model-1'].parts['sp400_M22-4'].setMeshControls(allowMapped=False, 
    elemShape=TET, regions=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#5f ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['sp400_M22-4'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#5f ]', ), ), ))
mdb.models['Model-1'].parts['sp400_M22-4'].deleteSeeds(regions=
    mdb.models['Model-1'].parts['sp400_M22-4'].edges.getSequenceFromMask((
    '[#ffffffff #ff ]', ), ))
mdb.models['Model-1'].parts['sp400_M22-4'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['sp400_M22-4'].edges.getSequenceFromMask(
    ('[#f823ff0f ]', ), ), number=8)
mdb.models['Model-1'].parts['sp400_M22-4'].generateMesh()
mdb.models['Model-1'].parts['sp400_M22-4'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT), ElemType(elemCode=C3D6, 
    elemLibrary=EXPLICIT), ElemType(elemCode=C3D4, elemLibrary=EXPLICIT)), 
    regions=(
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#7f ]', ), ), ))
# Save by 14analysis on 2018_10_12-13.36.20; build 6.12-1 2012_03_13-20.23.18 119612
# Save by 14analysis on 2018_10_12-13.39.32; build 6.12-1 2012_03_13-20.23.18 119612
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['sp400_M22-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['sp400_M22-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['sp400_M22-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    83.0341988291016, 71.1967926025391), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[41], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[42])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].CircleByCenterPerimeter(center=(0.0, 
    0.0), point1=(20.0, 0.0))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], ), vector=(
    10.760624, 0.0))
mdb.models['Model-1'].parts['sp400_M22-4'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['sp400_M22-4'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['sp400_M22-4'].features['Partition face-1'])
mdb.models['Model-1'].sketches['__edit__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[42], ), vector=(0.0, 
    60.0))
mdb.models['Model-1'].sketches['__edit__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[42]), vector=(0.0, 
    -120.0))
mdb.models['Model-1'].sketches['__edit__'].copyMove(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[50], ), vector=(0.0, 
    60.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[30], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[32], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[33], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[34]))
mdb.models['Model-1'].parts['sp400_M22-4'].features['Partition face-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['sp400_M22-4'].regenerate()
#* FeatureError:çƒç\ízÇÕé∏îsÇµÇ‹ÇµÇΩ
mdb.models['Model-1'].parts['sp400_M22-4'].deleteFeatures(('Partition cell-2', 
    'Partition cell-3', 'Partition cell-4', 'Partition cell-5', 
    'Partition cell-6'))
mdb.models['Model-1'].parts['sp400_M22-4'].deleteMesh(regions=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#1 ]', ), ))
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#2 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[20], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[33], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#4 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[27], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[34], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#1 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[25], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[35], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#1 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[28], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[36], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#1 ]', ), ), edges=(mdb.models['Model-1'].parts['sp400_M22-4'].edges[26], 
    ), line=mdb.models['Model-1'].parts['sp400_M22-4'].edges[37], sense=
    REVERSE)
mdb.models['Model-1'].parts['sp400_M22-4'].setMeshControls(allowMapped=False, 
    elemShape=TET, regions=
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#5f ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['sp400_M22-4'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#5f ]', ), ), ))
mdb.models['Model-1'].parts['sp400_M22-4'].seedEdgeByNumber(constraint=FINER, 
    edges=mdb.models['Model-1'].parts['sp400_M22-4'].edges.getSequenceFromMask(
    ('[#1570f ]', ), ), number=8)
mdb.models['Model-1'].parts['sp400_M22-4'].generateMesh()
# Save by 14analysis on 2018_10_12-16.55.42; build 6.12-1 2012_03_13-20.23.18 119612
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['sp400_M22-4'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT), ElemType(elemCode=C3D6, 
    elemLibrary=EXPLICIT), ElemType(elemCode=C3D4, elemLibrary=EXPLICIT)), 
    regions=(
    mdb.models['Model-1'].parts['sp400_M22-4'].cells.getSequenceFromMask((
    '[#7f ]', ), ), ))
# Save by 14analysis on 2018_10_12-16.56.22; build 6.12-1 2012_03_13-20.23.18 119612
# Save by 14analysis on 2018_10_12-16.57.27; build 6.12-1 2012_03_13-20.23.18 119612
