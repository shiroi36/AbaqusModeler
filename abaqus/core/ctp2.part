
#-------------------------------------------------------------------------------------------
#パートモジュール
#スケッチ押し出し
s = mdb.models['Model-1'].ConstrainedSketch(name='__profile__', 
sheetSize=200.0)
g, v, d, c = s.geometry, s.vertices, s.dimensions, s.constraints
s.setPrimaryObject(option=STANDALONE)
s.sketchOptions.setValues(gridOrigin=(lctp*0.5, 0.0))
s.retrieveSketch(sketch=mdb.models['Model-1'].sketches[sk0])
session.viewports['Viewport: 1'].view.fitView()
p = mdb.models['Model-1'].Part(name=cpartname, dimensionality=THREE_D, 
type=DEFORMABLE_BODY)
p = mdb.models['Model-1'].parts[cpartname]
p.BaseShell(sketch=s)
s.unsetPrimaryObject()
p = mdb.models['Model-1'].parts[cpartname]
session.viewports['Viewport: 1'].setValues(displayedObject=p)
del mdb.models['Model-1'].sketches['__profile__']





#スケッチ
p = mdb.models['Model-1'].parts[cpartname]
f, e, d1 = p.faces, p.edges, p.datums
t = p.MakeSketchTransform(sketchPlane=f[0], sketchUpEdge=e[14], 
sketchPlaneSide=SIDE1, origin=(lctp*0.5, 0.0, 0.0))
s1 = mdb.models['Model-1'].ConstrainedSketch(name='__profile__', 
sheetSize=1300.0, gridSpacing=32.5, transform=t)
g, v, d, c = s1.geometry, s1.vertices, s1.dimensions, s1.constraints
s1.setPrimaryObject(option=SUPERIMPOSE)
p = mdb.models['Model-1'].parts[cpartname]
p.projectReferencesOntoSketch(sketch=s1, filter=COPLANAR_EDGES)
s1.retrieveSketch(sketch=mdb.models['Model-1'].sketches[sk1])
session.viewports['Viewport: 1'].view.fitView()
s1.move(vector=(-lctp*0.5, 0.0), objectList=(g[18], g[19], g[20], g[21], g[22], 
g[23], g[24], g[25], g[26], g[27], g[28], g[29], g[30]))
p = mdb.models['Model-1'].parts[cpartname]
f = p.faces
pickedFaces = f.getSequenceFromMask(mask=('[#1 ]', ), )
e1, d2 = p.edges, p.datums
p.PartitionFaceBySketch(sketchUpEdge=e1[14], faces=pickedFaces, sketch=s1)
s1.unsetPrimaryObject()
del mdb.models['Model-1'].sketches['__profile__']



#------------------------------------------------------------------------
#シェル厚。これはシェルcfの12mm厚
mdb.models['Model-1'].HomogeneousShellSection(name='ctp', preIntegrate=OFF, 
material=mat, thicknessType=UNIFORM, thickness=tctp, 
thicknessField='', idealization=NO_IDEALIZATION, 
poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)


#シェル厚の割り当て
p = mdb.models['Model-1'].parts[cpartname]
f = p.faces
faces = f.getSequenceFromMask(mask=('[#3fff ]', ), )
region = regionToolset.Region(faces=faces)
p = mdb.models['Model-1'].parts['ctp']
p.SectionAssignment(region=region, sectionName='ctp', offset=0.0, 
offsetType=MIDDLE_SURFACE, offsetField='', 
thicknessAssignment=FROM_SECTION)


#------------------------------------------------------------------------
#メッシュの割り当て
p = mdb.models['Model-1'].parts[cpartname]
f = p.faces
pickedRegions = f.getSequenceFromMask(mask=('[#3fff ]', ), )
p.setMeshControls(regions=pickedRegions, elemShape=TRI, allowMapped=False)


#メッシュシードの割り当て
p = mdb.models['Model-1'].parts[cpartname]
p.seedPart(size=30.0, deviationFactor=0.1, minSizeFactor=0.1)


#局所メッシュシードの割り当て
p = mdb.models['Model-1'].parts[cpartname]
e = p.edges
pickedEdges = e.getSequenceFromMask(mask=('[#ffffff ]', ), )
p.seedEdgeByNumber(edges=pickedEdges, number=8, constraint=FINER)

#メッシュの実行
p = mdb.models['Model-1'].parts[cpartname]
p.generateMesh()


#サーフェスの設定

p = mdb.models['Model-1'].parts['ctp']
s = p.faces
side12Faces = s.getSequenceFromMask(mask=('[#fff ]', ), )
p.Surface(side12Faces=side12Faces, name='s0')



